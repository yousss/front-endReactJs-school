{"version":3,"sources":["components/ErrorMessage.js","pages/signin/SignInPage.js","pages/signup/SignUpPage.js","components/Task.js","components/TasksFilters.js","pages/tasks/TasksPage.js","pages/create-task/CreateTaskPage.js","App.js","serviceWorker.js","services/base-http.service.js","services/tasks.service.js","stores/tasks.store.js","stores/user.store.js","services/auth.service.js","index.js"],"names":["ErrorContainer","styled","div","_templateObject","ErrorHeading","h1","_templateObject2","ErrorList","ul","_templateObject3","ErrorMessage","renderMessageArray","errors","constraints","map","error","Object","values","flat","constraint","idx","react_default","a","createElement","key","message","this","props","Array","isArray","Component","Heading","SignInPage_templateObject","FormContainer","SignInPage_templateObject2","FormField","TextField","SignInPage_templateObject3","SignInPage","inject","_this","classCallCheck","_super","call","submit","asyncToGenerator","regenerator_default","mark","_callee","_this$state","username","password","errorMessage","wrap","_context","prev","next","setState","state","userStore","signin","routerStore","push","t0","response","data","stop","goToSignUp","errorMesssage","_this2","className","ErrorMessage_ErrorMessage","id","label","margin","variant","onChange","e","target","value","type","Button","style","marginBottom","fullWidth","color","onClick","SignUpPage_templateObject","SignUpPage_templateObject2","SignUpPage_templateObject3","SignUpPage","signup","SignUpPage_FormContainer","SignUpPage_Heading","SignUpPage_FormField","CardContainer","Task_templateObject","CardTitle","Task_templateObject2","Task","deleteTask","tasksStore","handleStatusChange","updateTaskStatus","_this$props","title","description","Card","CardContent","CardActions","padding","disableSpacing","Grid","justify","container","item","FormControl","width","Select","status","displayEmpty","MenuItem","IconButton","Delete_default","FiltersContainer","TasksFilters_templateObject","ControlContainer","TasksFilters_templateObject2","TasksFilters","filters$","Subject","syncFilters","search","handleStatusFilterChange","handleSearchTermChange","filters","pipe","debounceTime","subscribe","updateFilters","placeholder","InputProps","startAdornment","InputAdornment","position","Search_default","TasksWrapper","TasksPage_templateObject","TasksHeader","TasksPage_templateObject2","Title","TasksPage_templateObject3","CreateButtonContainer","_templateObject4","TasksContainer","_templateObject5","EmptyTasksPlaceholder","p","_templateObject6","SignOutIconContainer","_templateObject7","TasksPage","observer","handleSignOut","signout","resetTasks","renderTasks","tasks","length","task","components_Task","fetchTasks","Fab","Add_default","ExitToApp_default","components_TasksFilters","FormWrapper","CreateTaskPage_templateObject","CreateTaskPage_templateObject2","CreateTaskPage","handleSubmitTask","createTask","CreateTaskPage_FormContainer","multiline","rows","marginTop","App","react","react_router","exact","path","component","Boolean","window","location","hostname","match","BaseHttpService","BASE_URL","_accessToken","endpoint","options","assign","_getCommonOptions","axios","get","concat","catch","_handleHttpError","post","delete","_this3","patch","_this4","statusCode","_handle401","token","loadToken","headers","Authorization","accessToken","localStorage","setItem","getItem","removeItem","TasksService","_ref","queryObj","queryStr","queryString","stringify","TasksStore","tasksService","initializerDefineProperty","_descriptor","_descriptor2","result","findIndex","splice","find","observable","action","UserStore","authService","user_store_descriptor","removeToken","AuthService","saveToken","services","stores","RouterStore","browserHistory","createBrowserHistory","history","syncHistoryWithStore","Root","index_module","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.533358db.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorContainer = styled.div`\r\n  width: 100%;\r\n  padding: 8px 16px;\r\n  background-color: #f7c5c0;\r\n  color: #a51809;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ErrorHeading = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ErrorList = styled.ul`\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport default class ErrorMessage extends Component {\r\n  renderMessageArray = (errors) => {\r\n    const constraints = errors\r\n      .map((error) => (error.constraints ? Object.values(error.constraints) : error))\r\n      .flat()\r\n      .map((constraint, idx) => <li key={idx}>{constraint}</li>);\r\n\r\n    return <ErrorList>{constraints}</ErrorList>;\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <ErrorContainer>\r\n        <ErrorHeading>Oops!</ErrorHeading>\r\n        {Array.isArray(message) ? this.renderMessageArray(message) : <p>{message}</p>}\r\n      </ErrorContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nimport './SignInPage.scss'\r\nimport { inject } from 'mobx-react'\r\nimport ErrorMessage from '../../components/ErrorMessage'\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 0;\r\n`\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`\r\n\r\nconst FormField = styled(TextField)`\r\n  width: 100%;\r\n`\r\n\r\n@inject('userStore', 'routerStore')\r\nclass SignInPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errorMesssage: null,\r\n    }\r\n  }\r\n\r\n  submit = async () => {\r\n    this.setState({ errorMessage: null })\r\n    const { username, password } = this.state\r\n\r\n    try {\r\n      await this.props.userStore.signin(username, password)\r\n      this.props.routerStore.push('/tasks')\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message\r\n      this.setState({ errorMessage })\r\n    }\r\n  }\r\n\r\n  goToSignUp = () => {\r\n    this.props.routerStore.push('/signup')\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage } = this.state\r\n\r\n    return (\r\n      <div className=\"fullscreen-wrapper\">\r\n        <FormContainer>\r\n          <Heading>Hello!</Heading>\r\n          <p>Fill in your username and password to sign in hello world.</p>\r\n\r\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <Button\r\n              style={{ marginBottom: '10px' }}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.submit}\r\n            >\r\n              SIGN IN\r\n            </Button>\r\n\r\n            <Button fullWidth onClick={this.goToSignUp}>\r\n              Don't have an account? Sign up now!\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignInPage\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport './SignUpPage.scss';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormField = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n\r\n@inject('userStore', 'routerStore')\r\nclass SignUpPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  submit = async () => {\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      await this.props.userStore.signup(username, password);\r\n      this.props.routerStore.push('/signin');\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen-wrapper\">\r\n        <FormContainer>\r\n          <Heading>Join us!</Heading>\r\n          <p>Start managing tasks easily.</p>\r\n\r\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <p>\r\n            Passwords must contain at least 1 upper case letter, 1 lower case letter and one number OR special charracter.\r\n          </p>\r\n          <hr/>\r\n          <div>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.submit}\r\n            >\r\n              SIGN UP\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CardTitle = styled.h1`\r\n  margin: 8px 0;\r\n  font-size: 22px;\r\n`;\r\n\r\n@inject('tasksStore')\r\nclass Task extends Component {\r\n  deleteTask = () => {\r\n    this.props.tasksStore.deleteTask(this.props.id);\r\n  };\r\n\r\n  handleStatusChange = e => {\r\n    this.props.tasksStore.updateTaskStatus(this.props.id, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { title, description } = this.props;\r\n\r\n    return (\r\n      <CardContainer>\r\n        <Card>\r\n          <CardContent>\r\n            <CardTitle>{title}</CardTitle>\r\n            {description}\r\n          </CardContent>\r\n          <CardActions style={{ padding: '14px' }} disableSpacing>\r\n            <Grid\r\n              justify=\"space-between\" // Add it here :)\r\n              container \r\n            >\r\n              <Grid item>\r\n                <FormControl style={{ width: '140px' }}>\r\n                  <Select\r\n                    value={this.props.status}\r\n                    onChange={this.handleStatusChange}\r\n                    displayEmpty\r\n                  >\r\n                    <MenuItem value={'OPEN'}>Open</MenuItem>\r\n                    <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\r\n                    <MenuItem value={'DONE'}>Done</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <IconButton onClick={this.deleteTask}>\r\n                  <DeleteIcon color=\"error\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActions>\r\n        </Card>\r\n      </CardContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from 'react';\r\nimport { Grid, FormControl, Select, MenuItem, TextField, InputAdornment } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nconst FiltersContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ControlContainer = styled.div`\r\n  background-color: #c0cde0;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n`;\r\n\r\n@inject('tasksStore')\r\nclass TasksFilters extends Component {\r\n  filters$ = new Subject();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: props.tasksStore.filters.status,\r\n      search: props.tasksStore.filters.search,\r\n    };\r\n\r\n    this.filters$\r\n      .pipe(\r\n        debounceTime(500),\r\n      )\r\n      .subscribe(filters => {\r\n        props.tasksStore.updateFilters(filters);\r\n      });\r\n  }\r\n\r\n  syncFilters = () => {\r\n    const { status, search } = this.state;\r\n    this.filters$.next({ status, search });\r\n  }\r\n\r\n  handleStatusFilterChange = e => {\r\n    const status = e.target.value;\r\n    this.setState({ status }, this.syncFilters);\r\n  };\r\n\r\n  handleSearchTermChange = e => {\r\n    const search = e.target.value;\r\n    this.setState({ search }, this.syncFilters);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FiltersContainer>\r\n        <Grid\r\n          justify=\"space-between\" // Add it here :)\r\n          container\r\n        >\r\n          <Grid item>\r\n            <ControlContainer>\r\n              <FormControl style={{ width: '220px' }}>\r\n                <TextField\r\n                  placeholder=\"Search...\"\r\n                  value={this.state.search}\r\n                  onChange={this.handleSearchTermChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            </ControlContainer>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <ControlContainer>\r\n              <FormControl style={{ width: '220px' }}>\r\n                <Select\r\n                  value={this.state.status}\r\n                  onChange={this.handleStatusFilterChange}\r\n                  displayEmpty\r\n                >\r\n                  <MenuItem value=\"\">No status filter</MenuItem>\r\n                  <MenuItem value={'OPEN'}>Open</MenuItem>\r\n                  <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\r\n                  <MenuItem value={'DONE'}>Done</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </ControlContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </FiltersContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksFilters;\r\n","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Fab, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SignOutIcon from '@material-ui/icons/ExitToApp'\r\nimport styled from 'styled-components';\r\nimport Task from '../../components/Task';\r\nimport TasksFilters from '../../components/TasksFilters';\r\n\r\nconst TasksWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 860px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TasksHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 3px solid #757c87;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  width: 100%;\r\n  color: #edf4ff;\r\n`;\r\n\r\nconst CreateButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst TasksContainer = styled.div`\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst EmptyTasksPlaceholder = styled.p`\r\n  color: #edf4ff;\r\n  text-align: center;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst SignOutIconContainer = styled.div`\r\n  margin-left: 10px;\r\n  \r\n  .signOutIcon {\r\n    fill: #edf4ff;\r\n  }\r\n`;\r\n\r\n@inject('tasksStore', 'routerStore', 'userStore')\r\n@observer\r\nclass TasksPage extends Component {\r\n  componentDidMount() {\r\n    this.props.tasksStore.fetchTasks();\r\n  }\r\n  \r\n  handleSignOut = () => {\r\n    const { userStore, tasksStore, routerStore } = this.props;\r\n    userStore.signout();\r\n    tasksStore.resetTasks();\r\n    routerStore.push('/signin');\r\n  };\r\n\r\n  renderTasks = () => {\r\n    const { tasksStore } = this.props;\r\n\r\n    if (!tasksStore.tasks.length) {\r\n      return <EmptyTasksPlaceholder>No tasks available. Create one?</EmptyTasksPlaceholder>\r\n    }\r\n\r\n    return tasksStore.tasks.map(task => (\r\n      <Task\r\n        key={task.id}\r\n        id={task.id}\r\n        title={task.title}\r\n        description={task.description}\r\n        status={task.status}\r\n      />\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TasksWrapper>\r\n        <TasksHeader>\r\n          <Title>Get things done.</Title>\r\n\r\n          <CreateButtonContainer>\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={() => this.props.routerStore.push('/tasks/create')}\r\n            >\r\n              <AddIcon />\r\n              Create Task\r\n            </Fab>\r\n\r\n            <SignOutIconContainer>\r\n              <IconButton onClick={this.handleSignOut}>\r\n                <SignOutIcon className=\"signOutIcon\" />\r\n              </IconButton>\r\n            </SignOutIconContainer>\r\n          </CreateButtonContainer>\r\n        </TasksHeader>\r\n\r\n        <TasksFilters />\r\n\r\n        <TasksContainer>\r\n          {this.renderTasks()}\r\n        </TasksContainer>\r\n      </TasksWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksPage;\r\n","import React, { Component } from 'react';\r\nimport { TextField, FormControl, Button } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst FormWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n@inject('tasksStore', 'routerStore')\r\nclass CreateTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  handleSubmitTask = async () => {\r\n    const { tasksStore, routerStore } = this.props;\r\n    const { title, description } = this.state;\r\n\r\n    try {\r\n      await tasksStore.createTask(title, description);\r\n      routerStore.push('/tasks');\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormWrapper>\r\n        <FormContainer>\r\n          <h1>Create a new task</h1>\r\n          <p>Provide information about the task you wish to complete.</p>\r\n\r\n          { this.state.errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              label=\"Title\"\r\n              placeholder=\"Title\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ title: e.target.value })}\r\n            />\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              label=\"Description\"\r\n              placeholder=\"Description\"\r\n              multiline\r\n              rows=\"8\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ description: e.target.value })}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            style={{ marginTop: '10px' }}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.handleSubmitTask}\r\n          >\r\n            CREATE TASK\r\n          </Button>\r\n        </FormContainer>\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTaskPage;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport SignInPage from './pages/signin/SignInPage';\r\nimport SignUpPage from './pages/signup/SignUpPage';\r\nimport TasksPage from './pages/tasks/TasksPage';\r\nimport CreateTaskPage from './pages/create-task/CreateTaskPage';\r\n\r\n@inject('routerStore')\r\n@observer\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Route exact path=\"/\" component={SignInPage} />\r\n        <Route path=\"/signin/\" component={SignInPage} />\r\n        <Route path=\"/signup/\" component={SignUpPage} />\r\n        <Route exact path=\"/tasks\" component={TasksPage} />\r\n        <Route exact path=\"/tasks/create\" component={CreateTaskPage} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default class BaseHttpService {\r\n  BASE_URL = 'ec2-18-222-251-51.us-east-2.compute.amazonaws.com:8080'\r\n  _accessToken = null\r\n\r\n  constructor(routerStore) {\r\n    this.routerStore = routerStore\r\n  }\r\n\r\n  async get(endpoint, options = {}) {\r\n    Object.assign(options, this._getCommonOptions())\r\n    return axios\r\n      .get(`${this.BASE_URL}/${endpoint}`, options)\r\n      .catch((error) => this._handleHttpError(error))\r\n  }\r\n\r\n  async post(endpoint, data = {}, options = {}) {\r\n    Object.assign(options, this._getCommonOptions())\r\n    return axios\r\n      .post(`${this.BASE_URL}/${endpoint}`, data, options)\r\n      .catch((error) => this._handleHttpError(error))\r\n  }\r\n\r\n  async delete(endpoint, options = {}) {\r\n    Object.assign(options, this._getCommonOptions())\r\n    return axios\r\n      .delete(`${this.BASE_URL}/${endpoint}`, options)\r\n      .catch((error) => this._handleHttpError(error))\r\n  }\r\n\r\n  async patch(endpoint, data = {}, options = {}) {\r\n    Object.assign(options, this._getCommonOptions())\r\n    return axios\r\n      .patch(`${this.BASE_URL}/${endpoint}`, data, options)\r\n      .catch((error) => this._handleHttpError(error))\r\n  }\r\n\r\n  _handleHttpError(error) {\r\n    const { statusCode } = error.response.data\r\n\r\n    if (statusCode !== 401) {\r\n      throw error\r\n    } else {\r\n      return this._handle401()\r\n    }\r\n  }\r\n\r\n  _handle401() {\r\n    this.routerStore.push('/signin')\r\n  }\r\n\r\n  _getCommonOptions() {\r\n    const token = this.loadToken()\r\n\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  }\r\n\r\n  get accessToken() {\r\n    return this._accessToken ? this._accessToken : this.loadToken()\r\n  }\r\n\r\n  saveToken(accessToken) {\r\n    this._accessToken = accessToken\r\n    return localStorage.setItem('accessToken', accessToken)\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('accessToken')\r\n    this._accessToken = token\r\n    return token\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem('accessToken')\r\n  }\r\n}\r\n","import BaseHttpService from './base-http.service';\r\nimport queryString from 'query-string';\r\n\r\nexport default class TasksService extends BaseHttpService {\r\n  fetchTasks({ status, search}) {\r\n    const queryObj = {};\r\n\r\n    if (status.length) {\r\n      queryObj.status = status;\r\n    }\r\n\r\n    if (search.length) {\r\n      queryObj.search = search;\r\n    }\r\n\r\n    const queryStr = queryString.stringify(queryObj);\r\n    return this.get('tasks' + (queryStr ? `?${queryStr}` : ''));\r\n  }\r\n\r\n  async deleteTask(id) {\r\n    await this.delete(`tasks/${id}`);\r\n  }\r\n\r\n  updateTaskStatus(id, status) {\r\n    return this.patch(`tasks/${id}/status`, { status });\r\n  }\r\n\r\n  createTask(title, description) {\r\n    return this.post(`tasks`, { title, description });\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class TasksStore {\r\n  @observable tasks = [];\r\n  @observable filters = { status: '', search: '' };\r\n\r\n  constructor(tasksService) {\r\n    this.tasksService = tasksService;\r\n  }\r\n\r\n  updateFilters({ status, search }) {\r\n    this.filters.status = status;\r\n    this.filters.search = search;\r\n    this.fetchTasks();\r\n  }\r\n\r\n  @action\r\n  resetTasks() {\r\n    this.tasks = [];\r\n  }\r\n\r\n  @action\r\n  async fetchTasks() {\r\n    const result = await this.tasksService.fetchTasks(this.filters);\r\n\r\n    if (result) {\r\n      this.tasks = result.data;\r\n    }\r\n  }\r\n\r\n  @action\r\n  async createTask(title, description) {\r\n    const result = await this.tasksService.createTask(title, description);\r\n\r\n    if (result) {\r\n      this.tasks.push(result.data);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async deleteTask(id) {\r\n    const idx = this.tasks.findIndex(task => task.id === id);\r\n    await this.tasksService.deleteTask(id);\r\n    this.tasks.splice(idx, 1);\r\n  }\r\n\r\n  @action\r\n  async updateTaskStatus(id, status) {\r\n    const task = this.tasks.find(task => task.id === id);\r\n    await this.tasksService.updateTaskStatus(id, status);\r\n    task.status = status;\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class UserStore {\r\n  @observable username = null;\r\n\r\n  constructor(authService) {\r\n    this.authService = authService;\r\n  }\r\n\r\n  @action\r\n  async signin(username, password) {\r\n    this.username = await this.authService.signin(username, password);\r\n  }\r\n\r\n  @action\r\n  async signup(username, password) {\r\n    return this.authService.signup(username, password);\r\n  }\r\n\r\n  @action\r\n  signout() {\r\n    this.username = null;\r\n    this.authService.removeToken();\r\n  }\r\n}\r\n","import { post } from 'axios';\r\nimport BaseHttpService from './base-http.service';\r\n\r\nexport default class AuthService extends BaseHttpService {\r\n  async signin(username, password) {\r\n    const result = await post(`${this.BASE_URL}/auth/signin`, { username, password });\r\n    const accessToken = result.data.accessToken;\r\n    this.saveToken(accessToken);\r\n    return result.data.username;\r\n  }\r\n\r\n  async signup(username, password) {\r\n    await post(`${this.BASE_URL}/auth/signup`, { username, password });\r\n  }\r\n\r\n  async signout() {\r\n    this.removeToken();\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport { createBrowserHistory } from 'history';\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\r\nimport { Router } from 'react-router';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport TasksService from './services/tasks.service';\r\nimport TasksStore from './stores/tasks.store';\r\nimport UserStore from './stores/user.store';\r\nimport AuthService from './services/auth.service';\r\n\r\n\r\nconst services = {};\r\nconst stores = {};\r\n\r\nstores.routerStore = new RouterStore();\r\nconst browserHistory = createBrowserHistory();\r\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\r\n\r\nservices.tasksService = new TasksService(stores.routerStore);\r\nservices.authService = new AuthService();\r\n\r\nstores.tasksStore = new TasksStore(services.tasksService);\r\nstores.userStore = new UserStore(services.authService);\r\n\r\nconst Root = (\r\n  <Provider {...stores}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\nReactDOM.render(Root, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}